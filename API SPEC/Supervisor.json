GET ALL Supervisor API

Http Method: GET
"/supervisor"

(DEFAULT, harus ada di setiap API, untuk support tipe data JSON)
Request Header:
	- content-type	: application/json
	- Accept 		: application/json

//CONTOH balikan response get supervisor adalah data supervisor jika berhasil dan error NotFound Jika Gagal

Response Sukses
{
	"code" : "OK",
	"status" : 200,
	"content" : [
		{
			"id"		: 1,
			"nama" 		: "Achmad",	
			"hp"		: "081351877952",
			"email"		: "achmadynasution@gmail.com"
		},
		{
			"id"		: 2,
			"nama" 		: "Samuel",	
			"hp"		: "085913243124",
			"email"		: "samuelnapitupulu@gmail.com"
		}
	]
}

Response Failed
{
	"code" : "NotFound",
	"status" : 404,
	"content" : null
}


GET ONE Supervisor API

Http Method: GET
"/supervisor/{supervisorId}"

(DEFAULT, harus ada di setiap API, untuk support tipe data JSON)
Request Header:
	- content-type	: application/json
	- Accept 		: application/json

Path Variable:
supervisorId

//CONTOH balikan response get supervisor dengan id 1 adalah data supervisor jika berhasil dan error NotFound Jika Gagal
Response Sukses
{
	"code" : "OK",
	"status" : 200,
	"content" : [
		{
			"id"		: 1,
			"nama" 		: "Achmad",	
			"hp"		: "081351877952",
			"email"		: "achmadynasution@gmail.com"
		}
	]
}
Response Failed
{
	"code" : "Not Found",
	"status" : 404,
	"message" : "Supervisor not found with Id 1"
}


CREATE Supervisor API

Http Method: POST
"/supervisor"

(DEFAULT, harus ada di setiap API, untuk support tipe data JSON)
Request Header:
	- Content-type	: application/json
	- Accept 		: application/json


//CONTOH request supervisor yang akan disimpan
Request Body:
{
	"nama" 		: "Samuel",	
	"hp"		: "085913243124",
	"email"		: "samuelnapitupulu@gmail"
}


//CONTOH balikan response create supervisor misal nya adalah true jika berhasil dan false jika gagal
Response Sukses
{
	"code" : "OK",
	"status" : 200,
	"content : true
}

Response Failed
{
	"code" : "OK",
	"status" : 200,
	"content" : false
}


UPDATE Supervisor API

Http Method: Put
"/supervisor/{supervisorId}"

(DEFAULT, harus ada di setiap API, untuk support tipe data JSON)
Request Header:
	- Content-type	: application/json
	- Accept 		: application/json
	
Path Variable:
supervisorId

//CONTOH update supervisor dengan id = 1 yang sebelumnya berisi nama Achmad
Path Variable:
"/supervisor/1"
Request Body:
{
	"nama" 		: "Napitupulu",	
	"hp"		: "081351877952",
	"email"		: "achmadynasution@gmail.com"
}


//CONTOH balikan yang akan terjadi jika berhasil atau throw exception jika error
Response Sukses
{
	"code" : "OK",
	"status" : 200,
	"content" : true
}

Response Failed
{
	"code" : "Not Found",
	"status" : 404,
	"message" : "Supervisor not found with Id 1"
}


DELETE Supervisor API

Http Method: Delete
"/supervisor/{supervisorId}"

(DEFAULT, harus ada di setiap API, untuk support tipe data JSON)
Request Header:
	- Content-type	: application/json
	- Accept 		: application/json
	
Path Variable:
supervisorId

//CONTOH response delete supervisor dengan id = 1
Path Variable:
"/supervisor/1"
Response Sukses
{
	"code" : "OK",
	"status" : 200,
	"content" : true
}
Response Failed
{
	"code" : "Not Found",
	"status" : 404,
	"message" : "Supervisor not found with Id 1"
}